# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - prod-func-register-user

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:   
   unit-tests:
    runs-on: ubuntu-latest 
    env: 
      AZURE_SERVICE_BUS_CONNECTION: ${{ secrets.AZURE_SERVICE_BUS_CONNECTION }}
      AZURE_SERVICE_BUS_QUEUE_CUSTOMER: ${{ secrets.AZURE_SERVICE_BUS_QUEUE_CUSTOMER }}
      AZURE_SERVICE_BUS_QUEUE_CUSTOMER_ADDRESS: ${{ secrets.AZURE_SERVICE_BUS_QUEUE_CUSTOMER_ADDRESS }}      
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Unit Tests
        run: dotnet test Microservice.Register.Function.Test.Unit/Microservice.Register.Function.Test.Unit.csproj --logger "console;verbosity=detailed"
   
   build-and-deploy:
    runs-on: windows-latest
    needs: unit-tests
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'prod-func-register-user'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7EEEA0BC4FAB4FD1BB13AB352DF62696 }}

   automated-api-tests:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/PostmanCollections/MOS_Register_Azure_Function_V1_postman_collection.json" -e "${{ secrets.POSTMAN_ENVIRONMENT_ID }}" --integration-id "165236-${{ github.run_id }}"
